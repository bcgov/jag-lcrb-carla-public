{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
      "name": "${NAME}-deployment-template",
      "creationTimestamp": null
    },
    "objects": [
      {
        "kind": "DeploymentConfig",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}",
          "labels": {
            "template": "${NAME}-deployment"
          },
          "annotations": {
            "description": "Defines how to deploy ${NAME}"
          }
        },
        "spec": {
          "strategy": {
            "type": "Rolling"
          },
          "triggers": [
            {
              "type": "ConfigChange"
            },
            {
              "type": "ImageChange",
              "imageChangeParams": {
                "automatic": true,
                "containerNames": [
                  "${NAME}"
                ],
                "from": {
                  "kind": "ImageStreamTag",
                  "namespace": "${IMAGE_NAMESPACE}",
                  "name": "${SOURCE_IMAGE_NAME}:${TAG_NAME}"
                }
              }
            }
          ],
          "replicas": 1,
          "selector": {
            "name": "${NAME}"
          },
          "template": {
            "metadata": {
              "name": "${NAME}",
              "labels": {
                "name": "${NAME}"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "${NAME}",
                  "image": "",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 8088,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "ASPNETCORE_ENVIRONMENT",
                      "value": "${ASPNETCORE_ENVIRONMENT}"
                    },
                    {
                      "name": "SSG_USERNAME",
                      "value": "${SSG_USERNAME}"
                    },
                    {
                      "name": "SSG_PASSWORD",
                      "value": "${SSG_PASSWORD}"
                    },                                   
                    {
                      "name": "JWT_VALID_ISSUER",
                      "value": "${JWT_VALID_ISSUER}"
                    },
                    {
                      "name": "JWT_VALID_AUDIENCE",
                      "value": "${JWT_VALID_AUDIENCE}"
                    },
                    {
                      "name": "JWT_TOKEN_KEY",
                      "value": "${JWT_TOKEN_KEY}"
                    },
                    {
                      "name": "ORGBOOK_URL",
                      "value": "${ORGBOOK_URL}"
                    },
                    {
                      "name": "DOTNET_SSL_DIRS",
                      "value": "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
                    },
                    {
                      "name": "X_API_KEY",
                      "value": "${X_API_KEY}"
                    }
                  ],
                  "volumeMounts": [
                                      {
                                          "mountPath": "/var/run/secrets/service-cert",
                                          "name": "service-cert"
                                      }
                                  ],
                  "resources": {
                    "limits": {
                      "cpu": "${CPU_LIMIT}",
                      "memory": "${MEMORY_LIMIT}"
                    },
                    "requests": {
                      "cpu": "${CPU_REQUEST}",
                      "memory": "${MEMORY_REQUEST}"
                    }
                  },
                  "readinessProbe": {
                    "httpGet": {
                      "path": "/hc/ready",
                      "port": 8088,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  },
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/hc/live",
                      "port": 8088,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "timeoutSeconds": 1,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "failureThreshold": 3
                  }
                }
              ],
            "volumes": [
                              {
                                  "name": "service-cert",
                                  "secret": {
                                      "defaultMode": 420,
                                      "secretName": "${NAME}-cert"
                                  }
                              }
                          ]
            }
          }
        }
      },
      {
        "kind": "Service",
        "apiVersion": "v1",
        "metadata": {
          "name": "${NAME}",
          "labels": {
            "template": "${NAME}-deployment"
          },
          "annotations": {
            "description": "Exposes and load balances the application pods.",
            "service.alpha.openshift.io/serving-cert-secret-name": "${NAME}-cert"
          }
        },
        "spec": {
          "ports": [
            {
              "name": "8080-tcp",
              "protocol": "TCP",
              "port": 8080,
              "targetPort": 8080
            },
            {
              "name": "8088-tcp",
              "protocol": "TCP",
              "port": 8088,
              "targetPort": 8088
            }
          ],
          "selector": {
            "name": "${NAME}"
          },
          "type": "ClusterIP",
          "sessionAffinity": "None"
        }
      }    
    ],
    "parameters": [
      {
        "name": "NAME",
        "displayName": "Name",
        "description": "The name assigned to all of the resources defined in this template.",
        "required": true,
        "value": "orgbook-service"
      },
      {
        "name": "SOURCE_IMAGE_NAME",
        "displayName": "Source Image Name",
        "description": "The name of the image to use for this resource.",
        "required": true,
        "value": "orgbook-service"
      },
      {
        "name": "IMAGE_NAMESPACE",
        "displayName": "Image Namespace",
        "description": "The namespace of the OpenShift project containing the imagestream for the application.",
        "required": true,
        "value": "lclb-cllc-tools"
      },
      {
        "name": "TAG_NAME",
        "displayName": "Environment TAG name",
        "description": "The TAG name for this environment, e.g., dev, test, prod",
        "required": true,
        "value": "dev"
      },
      {
        "name": "ASPNETCORE_ENVIRONMENT",
        "displayName": "AspNetCore Environment",
        "description": "The ASP Net Core deployment environment setting.",
        "required": true,
        "value": "Production"
      },
      {
        "name": "CPU_LIMIT",
        "displayName": "CPU Limit",
        "description": "Maximum amount of CPU the container can use.",
        "value": "100m"
      },
      {
        "name": "MEMORY_LIMIT",
        "displayName": "Memory Limit",
        "description": "Maximum amount of memory the container can use.",
        "value": "2Gi"
      },
      {
        "name": "CPU_REQUEST",
        "displayName": "CPU Request",
        "description": "Starting amount of CPU the container can use.",
        "value": "10m"
      },
      {
        "name": "MEMORY_REQUEST",
        "displayName": "Memory Request",
        "description": "Starting amount of memory the container can use.",
        "value": "512Mi"
      }, 
      {
          "description": "String used to identify the issuer.  Usually a URL to a website.",
          "displayName": "JWT VALID ISSUER",
          "name": "JWT_VALID_ISSUER",
          "required": true,
          "value": "CHANGEME"
      },
      {
          "description": "String used to identify the audience.",
          "displayName": "JWT VALID AUDIENCE",
          "name": "JWT_VALID_AUDIENCE",
          "required": true,
          "value": "CHANGEME"
      },
      {
          "description": "Secret/Key used to generate tokens.  Can be any text string, including the text form of a GUID.",
          "displayName": "JWT Token Key",
          "name": "JWT_TOKEN_KEY",
          "required": true,
          "value": "CHANGEME"
      },	
      {
          "description": "Dynamics native URI",
          "displayName": "DYNAMICS_NATIVE_ODATA_URI",
          "name": "DYNAMICS_NATIVE_ODATA_URI",
          "required": true,
          "value": "CHANGEME"
      }	
    ]
  }
