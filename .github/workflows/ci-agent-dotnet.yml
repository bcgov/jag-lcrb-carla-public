name: ci-agent-dotnet
on:
  push:
    branches:
      - develop

    paths:
      - "/openshift/other-templates/agent-dotnet/**"
      - ".github/workflows/ci-agent-dotnet.yml"

env:
  IMAGE_NAME: "agent-dotnet"
  SOURCE_IMAGE_ID: ${{ secrets.OCP4_REGISTRY }}/${{ secrets.OCP4_NAMESPACE }}/ose-jenkins-agent-base
  MYAPP_IMAGE: ${{ secrets.OCP4_REGISTRY }}/${{ secrets.OCP4_NAMESPACE }}/ose-jenkins-agent-base:latest
  IMAGE_ID: ${{ secrets.OCP4_REGISTRY }}/${{ secrets.OCP4_NAMESPACE }}/agent-dotnet
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.OCP4_PASSWORD  }}" | docker login ${{ secrets.OCP4_REGISTRY }}/${{ secrets.OCP4_NAMESPACE }} -u ${{ secrets.OCP4_USERNAME }} --password-stdin

      - name: Pull image
        run: docker pull $SOURCE_IMAGE_ID || true

      - name: Build image
        working-directory: ./openshift/other-templates/agent-dotnet
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --build-arg MYAPP_IMAGE=$MYAPP_IMAGE

      - name: Push image
        run: |
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
